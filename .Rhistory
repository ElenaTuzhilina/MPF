Ys[[q]] = plot_fit_merged(train, test, model, top_geo[1], paste0("Plots/", scenario, "/Fits/fit.pdf"))
Ys[[q]] = plot_fit_merged(train, test, model, top_geo[1], paste0("Plots/", scenario, "/Fits/fit.pdf"))
source("functions.R")
Ys[[q]] = plot_fit_merged(train, test, model, top_geo[1], paste0("Plots/", scenario, "/Fits/fit.pdf"))
source("functions.R")
Ys[[q]] = plot_fit_merged(train, test, model, top_geo[1], paste0("Plots/", scenario, "/Fits/fit.pdf"))saveRDS(Ys, paste0("Fits/", scenario,"/fits.rds"))
Ys[[q]] = plot_fit_merged(train, test, model, top_geo[1], paste0("Plots/", scenario, "/Fits/fit.pdf"))saveRDS(Ys, paste0("Fits/", scenario,"/fits.rds"))
Ys[[q]] = plot_fit_merged(train, test, model, top_geo[1], paste0("Plots/", scenario, "/Fits/fit.pdf"))
plot_fit_merged = function(train, test, model, geo_values, pltname){
Yhat_train <- train$X %*% model$B
colnames(Yhat_train) <- colnames(train$Y)
Yhat_test <- test$X %*% model$B
colnames(Yhat_test) <- colnames(test$Y)
Y <- rbind(data.frame(reshape_y(train$Y, train$info), "type" = "observed train"),
data.frame(reshape_y(Yhat_train, train$info), "type" = "predicted train"),
data.frame(reshape_y(test$Y, test$info), "type" = "unobserved test"),
data.frame(reshape_y(Yhat_test, test$info), "type" = "predicted test")) %>%
mutate(type = factor(type, levels = c("predicted train", "predicted test", "observed train", "unobserved test"))) %>%
mutate(ahead = as.numeric(ahead)) %>%
mutate(time = time_stamp + ahead) %>%
filter(geo_value %in% geo_values)
ggplot(Y, aes(time, cases, color = type, size = type, alpha = type, group = interaction(time_stamp, type)))+
geom_line()+
geom_point()+
#facet_grid(~geo_value)+
theme_light()+
theme(legend.position="top")+
theme(legend.title = element_blank())+
scale_size_manual(values=c("predicted train" = 0.5, "predicted test" = 0.5, "observed train" = 0.5, "unobserved test" = 0.5))+
scale_color_manual(values=c("predicted train" = "dodgerblue1", "predicted test" = "tomato1", "observed train" = "black", "unobserved test" = "tomato4"))+
scale_alpha_manual(values=c("predicted train" = 0, "predicted test" = 0.7, "observed train" = 1, "unobserved test" = 0))
ggsave(pltname, height = 3, width = length(geo_values) * 2)
return(Y)
}
Ys[[q]] = plot_fit_merged(train, test, model, top_geo[1], paste0("Plots/", scenario, "/Fits/fit.pdf"))
plot_fit_merged = function(train, test, model, geo_values, pltname){
Yhat_train <- train$X %*% model$B
colnames(Yhat_train) <- colnames(train$Y)
Yhat_test <- test$X %*% model$B
colnames(Yhat_test) <- colnames(test$Y)
Y <- rbind(data.frame(reshape_y(train$Y, train$info), "type" = "observed train"),
data.frame(reshape_y(Yhat_train, train$info), "type" = "predicted train"),
data.frame(reshape_y(test$Y, test$info), "type" = "unobserved test"),
data.frame(reshape_y(Yhat_test, test$info), "type" = "predicted test")) %>%
mutate(type = factor(type, levels = c("predicted train", "predicted test", "observed train", "unobserved test"))) %>%
mutate(ahead = as.numeric(ahead)) %>%
mutate(time = time_stamp + ahead) %>%
filter(geo_value %in% geo_values)
ggplot(Y, aes(time, cases, color = type, size = type, alpha = type, group = interaction(time_stamp, type)))+
geom_line()+
geom_point()+
#facet_grid(~geo_value)+
theme_light()+
theme(legend.position="top")+
theme(legend.title = element_blank())+
scale_size_manual(values=c("predicted train" = 0.5, "predicted test" = 0.5, "observed train" = 0.5, "unobserved test" = 0.5))+
scale_color_manual(values=c("predicted train" = "dodgerblue1", "predicted test" = "tomato1", "observed train" = "black", "unobserved test" = "tomato4"))+
scale_alpha_manual(values=c("predicted train" = 0, "predicted test" = 0.7, "observed train" = 1, "unobserved test" = 0))
ggsave(pltname, height = 3, width = length(geo_values) * 5)
return(Y)
}
Ys[[q]] = plot_fit_merged(train, test, model, top_geo[1], paste0("Plots/", scenario, "/Fits/fit.pdf"))
plot_fit_merged = function(train, test, model, geo_values, pltname){
Yhat_train <- train$X %*% model$B
colnames(Yhat_train) <- colnames(train$Y)
Yhat_test <- test$X %*% model$B
colnames(Yhat_test) <- colnames(test$Y)
Y <- rbind(data.frame(reshape_y(train$Y, train$info), "type" = "observed train"),
data.frame(reshape_y(Yhat_train, train$info), "type" = "predicted train"),
data.frame(reshape_y(test$Y, test$info), "type" = "unobserved test"),
data.frame(reshape_y(Yhat_test, test$info), "type" = "predicted test")) %>%
mutate(type = factor(type, levels = c("predicted train", "predicted test", "observed train", "unobserved test"))) %>%
mutate(ahead = as.numeric(ahead)) %>%
mutate(time = time_stamp + ahead) %>%
filter(geo_value %in% geo_values)
ggplot(Y, aes(time, cases, color = type, size = type, alpha = type, group = interaction(time_stamp, type)))+
geom_line()+
geom_point()+
#facet_grid(~geo_value)+
theme_light()+
theme(legend.position="top")+
theme(legend.title = element_blank())+
scale_size_manual(values=c("predicted train" = 0.5, "predicted test" = 0.5, "observed train" = 0.5, "unobserved test" = 0.5))+
scale_color_manual(values=c("predicted train" = "dodgerblue1", "predicted test" = "tomato1", "observed train" = "black", "unobserved test" = "tomato4"))+
scale_alpha_manual(values=c("predicted train" = 0, "predicted test" = 1, "observed train" = 1, "unobserved test" = 0))
ggsave(pltname, height = 3, width = length(geo_values) * 6)
return(Y)
}
Ys[[q]] = plot_fit_merged(train, test, model, top_geo[1], paste0("Plots/", scenario, "/Fits/fit.pdf"))
Ys[[q]] = plot_fit_merged(train, test, model, top_geo[5], paste0("Plots/", scenario, "/Fits/fit.pdf"))
Ys[[q]] = plot_fit_merged(train, test, model, top_geo[10], paste0("Plots/", scenario, "/Fits/fit.pdf"))
Ys[[q]] = plot_fit_merged(train, test, model, top_geo[12], paste0("Plots/", scenario, "/Fits/fit.pdf"))
Ys[[q]] = plot_fit_merged(train, test, model, top_geo[15], paste0("Plots/", scenario, "/Fits/fit.pdf"))
Ys[[q]] = plot_fit_merged(train, test, model, top_geo[20], paste0("Plots/", scenario, "/Fits/fit.pdf"))
Ys[[q]] = plot_fit_merged(train, test, model, top_geo[50], paste0("Plots/", scenario, "/Fits/fit.pdf"))
Ys[[q]] = plot_fit_merged(train, test, model, top_geo[100], paste0("Plots/", scenario, "/Fits/fit.pdf"))
Ys[[q]] = plot_fit_merged(train, test, model, top_geo[120], paste0("Plots/", scenario, "/Fits/fit.pdf"))
plot_fit_merged = function(train, test, model, geo_values, pltname){
Yhat_train <- train$X %*% model$B
colnames(Yhat_train) <- colnames(train$Y)
Yhat_test <- test$X %*% model$B
colnames(Yhat_test) <- colnames(test$Y)
Y <- rbind(data.frame(reshape_y(train$Y, train$info), "type" = "observed train"),
data.frame(reshape_y(Yhat_train, train$info), "type" = "predicted train"),
data.frame(reshape_y(test$Y, test$info), "type" = "unobserved test"),
data.frame(reshape_y(Yhat_test, test$info), "type" = "predicted test")) %>%
mutate(type = factor(type, levels = c("predicted train", "predicted test", "observed train", "unobserved test"))) %>%
mutate(ahead = as.numeric(ahead)) %>%
mutate(time = time_stamp + ahead) %>%
filter(geo_value %in% geo_values) %>%
select(type %in% c("observed train", "predicted test"))
ggplot(Y, aes(time, cases, color = type, size = type, alpha = type, group = interaction(time_stamp, type)))+
geom_line()+
geom_point()+
#facet_grid(~geo_value)+
theme_light()+
theme(legend.position="top")+
theme(legend.title = element_blank())+
scale_size_manual(values=c("predicted train" = 0.5, "predicted test" = 0.5, "observed train" = 0.5, "unobserved test" = 0.5))+
scale_color_manual(values=c("predicted train" = "dodgerblue1", "predicted test" = "tomato1", "observed train" = "black", "unobserved test" = "tomato4"))+
scale_alpha_manual(values=c("predicted train" = 0, "predicted test" = 1, "observed train" = 1, "unobserved test" = 0))
ggsave(pltname, height = 3, width = length(geo_values) * 6)
return(Y)
}
Ys[[q]] = plot_fit_merged(train, test, model, top_geo[120], paste0("Plots/", scenario, "/Fits/fit.pdf"))
plot_fit_merged = function(train, test, model, geo_values, pltname){
Yhat_train <- train$X %*% model$B
colnames(Yhat_train) <- colnames(train$Y)
Yhat_test <- test$X %*% model$B
colnames(Yhat_test) <- colnames(test$Y)
Y <- rbind(data.frame(reshape_y(train$Y, train$info), "type" = "observed train"),
data.frame(reshape_y(Yhat_train, train$info), "type" = "predicted train"),
data.frame(reshape_y(test$Y, test$info), "type" = "unobserved test"),
data.frame(reshape_y(Yhat_test, test$info), "type" = "predicted test")) %>%
mutate(type = factor(type, levels = c("predicted train", "predicted test", "observed train", "unobserved test"))) %>%
mutate(ahead = as.numeric(ahead)) %>%
mutate(time = time_stamp + ahead) %>%
filter(geo_value %in% geo_values) %>%
filter(type %in% c("observed train", "predicted test"))
ggplot(Y, aes(time, cases, color = type, size = type, alpha = type, group = interaction(time_stamp, type)))+
geom_line()+
geom_point()+
#facet_grid(~geo_value)+
theme_light()+
theme(legend.position="top")+
theme(legend.title = element_blank())+
scale_size_manual(values=c("predicted train" = 0.5, "predicted test" = 0.5, "observed train" = 0.5, "unobserved test" = 0.5))+
scale_color_manual(values=c("predicted train" = "dodgerblue1", "predicted test" = "tomato1", "observed train" = "black", "unobserved test" = "tomato4"))+
scale_alpha_manual(values=c("predicted train" = 0, "predicted test" = 1, "observed train" = 1, "unobserved test" = 0))
ggsave(pltname, height = 3, width = length(geo_values) * 6)
return(Y)
}
Ys[[q]] = plot_fit_merged(train, test, model, top_geo[120], paste0("Plots/", scenario, "/Fits/fit.pdf"))
plot_fit_merged = function(train, test, model, geo_values, pltname){
Yhat_train <- train$X %*% model$B
colnames(Yhat_train) <- colnames(train$Y)
Yhat_test <- test$X %*% model$B
colnames(Yhat_test) <- colnames(test$Y)
Y <- rbind(data.frame(reshape_y(train$Y, train$info), "type" = "observed train"),
data.frame(reshape_y(Yhat_train, train$info), "type" = "predicted train"),
data.frame(reshape_y(test$Y, test$info), "type" = "unobserved test"),
data.frame(reshape_y(Yhat_test, test$info), "type" = "predicted test")) %>%
mutate(type = factor(type, levels = c("predicted train", "predicted test", "observed train", "unobserved test"))) %>%
mutate(ahead = as.numeric(ahead)) %>%
mutate(time = time_stamp + ahead) %>%
filter(geo_value %in% geo_values) %>%
filter(type %in% c("observed train", "predicted test")) %>%
filter(time_stamp <= as.Date("2021-10-02"))
ggplot(Y, aes(time, cases, color = type, size = type, alpha = type, group = interaction(time_stamp, type)))+
geom_line()+
geom_point()+
#facet_grid(~geo_value)+
theme_light()+
theme(legend.position="top")+
theme(legend.title = element_blank())+
scale_size_manual(values=c("predicted train" = 0.5, "predicted test" = 0.5, "observed train" = 0.5, "unobserved test" = 0.5))+
scale_color_manual(values=c("predicted train" = "dodgerblue1", "predicted test" = "tomato1", "observed train" = "black", "unobserved test" = "tomato4"))+
scale_alpha_manual(values=c("predicted train" = 0, "predicted test" = 1, "observed train" = 1, "unobserved test" = 0))
ggsave(pltname, height = 3, width = length(geo_values) * 6)
return(Y)
}
Ys[[q]] = plot_fit_merged(train, test, model, top_geo[120], paste0("Plots/", scenario, "/Fits/fit.pdf"))
plot_fit_merged = function(train, test, model, geo_values, pltname){
Yhat_train <- train$X %*% model$B
colnames(Yhat_train) <- colnames(train$Y)
Yhat_test <- test$X %*% model$B
colnames(Yhat_test) <- colnames(test$Y)
Y <- rbind(data.frame(reshape_y(train$Y, train$info), "type" = "observed train"),
data.frame(reshape_y(Yhat_train, train$info), "type" = "predicted train"),
data.frame(reshape_y(test$Y, test$info), "type" = "unobserved test"),
data.frame(reshape_y(Yhat_test, test$info), "type" = "predicted test")) %>%
mutate(type = factor(type, levels = c("predicted train", "predicted test", "observed train", "unobserved test"))) %>%
mutate(ahead = as.numeric(ahead)) %>%
mutate(time = time_stamp + ahead) %>%
filter(geo_value %in% geo_values) %>%
filter(type %in% c("observed train", "predicted test")) %>%
filter(time_stamp <= as.Date("2021-10-02"))
ggplot(Y, aes(time, cases, color = type, size = type, alpha = type, group = interaction(time_stamp, type)))+
geom_line()+
geom_point()+
#facet_grid(~geo_value)+
theme_light()+
theme(legend.position="top")+
theme(legend.title = element_blank())+
scale_size_manual(values=c("predicted train" = 0.5, "predicted test" = 0.5, "observed train" = 0.5, "unobserved test" = 0.5))+
scale_color_manual(values=c("predicted train" = "dodgerblue1", "predicted test" = "tomato1", "observed train" = "dodgerblue1", "unobserved test" = "tomato4"))+
scale_alpha_manual(values=c("predicted train" = 0, "predicted test" = 1, "observed train" = 1, "unobserved test" = 0))
ggsave(pltname, height = 3, width = length(geo_values) * 6)
return(Y)
}
plot_fit_merged = function(train, test, model, geo_values, pltname){
Yhat_train <- train$X %*% model$B
colnames(Yhat_train) <- colnames(train$Y)
Yhat_test <- test$X %*% model$B
colnames(Yhat_test) <- colnames(test$Y)
Y <- rbind(data.frame(reshape_y(train$Y, train$info), "type" = "observed train"),
data.frame(reshape_y(Yhat_train, train$info), "type" = "predicted train"),
data.frame(reshape_y(test$Y, test$info), "type" = "unobserved test"),
data.frame(reshape_y(Yhat_test, test$info), "type" = "predicted test")) %>%
mutate(type = factor(type, levels = c("predicted train", "predicted test", "observed train", "unobserved test"))) %>%
mutate(ahead = as.numeric(ahead)) %>%
mutate(time = time_stamp + ahead) %>%
filter(geo_value %in% geo_values) %>%
filter(type %in% c("observed train", "predicted test")) %>%
filter(time_stamp <= as.Date("2021-10-02"))
ggplot(Y, aes(time, cases, color = type, size = type, alpha = type, group = interaction(time_stamp, type)))+
geom_line()+
geom_point()+
facet_grid(~geo_value)+
theme_light()+
theme(legend.position="top")+
theme(legend.title = element_blank())+
scale_size_manual(values=c("predicted train" = 0.5, "predicted test" = 0.5, "observed train" = 0.5, "unobserved test" = 0.5))+
scale_color_manual(values=c("predicted train" = "dodgerblue1", "predicted test" = "tomato1", "observed train" = "dodgerblue1", "unobserved test" = "tomato4"))+
scale_alpha_manual(values=c("predicted train" = 0, "predicted test" = 1, "observed train" = 1, "unobserved test" = 0))
ggsave(pltname, height = 3, width = length(geo_values) * 6)
return(Y)
}
Ys[[q]] = plot_fit_merged(train, test, model, top_geo[120], paste0("Plots/", scenario, "/Fits/fit.pdf"))
plot_fit_merged = function(train, test, model, geo_values, pltname){
Yhat_train <- train$X %*% model$B
colnames(Yhat_train) <- colnames(train$Y)
Yhat_test <- test$X %*% model$B
colnames(Yhat_test) <- colnames(test$Y)
Y <- rbind(data.frame(reshape_y(train$Y, train$info), "type" = "observed train"),
data.frame(reshape_y(Yhat_train, train$info), "type" = "predicted train"),
data.frame(reshape_y(test$Y, test$info), "type" = "unobserved test"),
data.frame(reshape_y(Yhat_test, test$info), "type" = "predicted test")) %>%
mutate(type = factor(type, levels = c("predicted train", "predicted test", "observed train", "unobserved test"))) %>%
mutate(ahead = as.numeric(ahead)) %>%
mutate(time = time_stamp + ahead) %>%
filter(geo_value %in% geo_values) %>%
filter(type %in% c("observed train", "predicted test")) %>%
filter(time_stamp <= as.Date("2021-10-02"))
ggplot(Y, aes(time, cases, color = type, size = type, alpha = type, group = interaction(time_stamp, type)))+
geom_line()+
geom_point()+
facet_grid(~geo_value)+
theme_light()+
theme(legend.position="top")+
theme(legend.title = element_blank())+
scale_size_manual(values=c( "predicted test" = 0.5, "observed train" = 0.5))+
scale_color_manual(values=c("predicted test" = "tomato1", "observed train" = "dodgerblue1"))+
scale_alpha_manual(values=c("predicted test" = 1, "observed train" = 1))
ggsave(pltname, height = 3, width = length(geo_values) * 6)
return(Y)
}
Ys[[q]] = plot_fit_merged(train, test, model, top_geo[120], paste0("Plots/", scenario, "/Fits/fit.pdf"))
plot_fit_merged = function(train, test, model, geo_values, pltname){
Yhat_train <- train$X %*% model$B
colnames(Yhat_train) <- colnames(train$Y)
Yhat_test <- test$X %*% model$B
colnames(Yhat_test) <- colnames(test$Y)
Y <- rbind(data.frame(reshape_y(train$Y, train$info), "type" = "observed train"),
data.frame(reshape_y(Yhat_train, train$info), "type" = "predicted train"),
data.frame(reshape_y(test$Y, test$info), "type" = "unobserved test"),
data.frame(reshape_y(Yhat_test, test$info), "type" = "predicted test")) %>%
mutate(type = factor(type, levels = c("predicted train", "predicted test", "observed train", "unobserved test"))) %>%
mutate(ahead = as.numeric(ahead)) %>%
mutate(time = time_stamp + ahead) %>%
filter(geo_value %in% geo_values) %>%
filter(type %in% c("observed train", "predicted test")) %>%
filter(time_stamp <= as.Date("2021-10-02")) %>%
mutate(geo_value = paste0("geo value = ", geo_value))
ggplot(Y, aes(time, cases, color = type, size = type, alpha = type, group = interaction(time_stamp, type)))+
geom_line()+
geom_point()+
facet_grid(~geo_value)+
theme_light()+
theme(legend.position="top")+
theme(legend.title = element_blank())+
scale_size_manual(values=c( "predicted test" = 0.5, "observed train" = 0.5))+
scale_color_manual(values=c("predicted test" = "tomato1", "observed train" = "dodgerblue1"))+
scale_alpha_manual(values=c("predicted test" = 1, "observed train" = 1))
ggsave(pltname, height = 3, width = length(geo_values) * 6)
return(Y)
}
Ys[[q]] = plot_fit_merged(train, test, model, top_geo[120], paste0("Plots/", scenario, "/Fits/fit.pdf"))
plot_fit_merged = function(train, test, model, geo_values, pltname){
Yhat_train <- train$X %*% model$B
colnames(Yhat_train) <- colnames(train$Y)
Yhat_test <- test$X %*% model$B
colnames(Yhat_test) <- colnames(test$Y)
Y <- rbind(data.frame(reshape_y(train$Y, train$info), "type" = "observed train"),
data.frame(reshape_y(Yhat_train, train$info), "type" = "predicted train"),
data.frame(reshape_y(test$Y, test$info), "type" = "unobserved test"),
data.frame(reshape_y(Yhat_test, test$info), "type" = "predicted test")) %>%
mutate(type = factor(type, levels = c("predicted train", "predicted test", "observed train", "unobserved test"))) %>%
mutate(ahead = as.numeric(ahead)) %>%
mutate(time = time_stamp + ahead) %>%
filter(geo_value %in% geo_values) %>%
filter(type %in% c("observed train", "predicted test")) %>%
filter(time_stamp <= as.Date("2021-10-02")) %>%
mutate(geo_value = paste0("Montgomery County"))
ggplot(Y, aes(time, cases, color = type, size = type, alpha = type, group = interaction(time_stamp, type)))+
geom_line()+
geom_point()+
facet_grid(~geo_value)+
theme_light()+
theme(legend.position="top")+
theme(legend.title = element_blank())+
scale_size_manual(values=c( "predicted test" = 0.5, "observed train" = 0.5))+
scale_color_manual(values=c("predicted test" = "tomato1", "observed train" = "dodgerblue1"))+
scale_alpha_manual(values=c("predicted test" = 1, "observed train" = 1))
ggsave(pltname, height = 3, width = length(geo_values) * 6)
return(Y)
}
Ys[[q]] = plot_fit_merged(train, test, model, top_geo[120], paste0("Plots/", scenario, "/Fits/fit.pdf"))
plot_fit_merged = function(train, test, model, geo_values, pltname){
Yhat_train <- train$X %*% model$B
colnames(Yhat_train) <- colnames(train$Y)
Yhat_test <- test$X %*% model$B
colnames(Yhat_test) <- colnames(test$Y)
Y <- rbind(data.frame(reshape_y(train$Y, train$info), "type" = "observed train"),
data.frame(reshape_y(Yhat_train, train$info), "type" = "predicted train"),
data.frame(reshape_y(test$Y, test$info), "type" = "unobserved test"),
data.frame(reshape_y(Yhat_test, test$info), "type" = "predicted test")) %>%
mutate(type = factor(type, levels = c("predicted train", "predicted test", "observed train", "unobserved test"))) %>%
mutate(ahead = as.numeric(ahead)) %>%
mutate(time = time_stamp + ahead) %>%
filter(geo_value %in% geo_values) %>%
filter(type %in% c("observed train", "predicted test")) %>%
filter(time_stamp <= as.Date("2021-10-02")) %>%
mutate(geo_value = paste0("Montgomery County"))
plt <- ggplot(Y, aes(time, cases, color = type, size = type, alpha = type, group = interaction(time_stamp, type)))+
geom_line()+
geom_point()+
facet_grid(~geo_value)+
theme_light()+
theme(legend.position="top")+
theme(legend.title = element_blank())+
scale_size_manual(values=c( "predicted test" = 0.5, "observed train" = 0.5))+
scale_color_manual(values=c("predicted test" = "tomato1", "observed train" = "dodgerblue1"))+
scale_alpha_manual(values=c("predicted test" = 1, "observed train" = 1))
print(plt)
#ggsave(pltname, height = 3, width = length(geo_values) * 6)
return(Y)
}
Ys[[q]] = plot_fit_merged(train, test, model, top_geo[120], paste0("Plots/", scenario, "/Fits/fit.pdf"))
Ys[[q]] = plot_fit_merged(train, test, model, top_geo[125], paste0("Plots/", scenario, "/Fits/fit.pdf"))
Ys[[q]] = plot_fit_merged(train, test, model, top_geo[126], paste0("Plots/", scenario, "/Fits/fit.pdf"))
top_geo[126]
plot_fit_merged = function(train, test, model, geo_values, pltname){
Yhat_train <- train$X %*% model$B
colnames(Yhat_train) <- colnames(train$Y)
Yhat_test <- test$X %*% model$B
colnames(Yhat_test) <- colnames(test$Y)
Y <- rbind(data.frame(reshape_y(train$Y, train$info), "type" = "observed train"),
data.frame(reshape_y(Yhat_train, train$info), "type" = "predicted train"),
data.frame(reshape_y(test$Y, test$info), "type" = "unobserved test"),
data.frame(reshape_y(Yhat_test, test$info), "type" = "predicted test")) %>%
mutate(type = factor(type, levels = c("predicted train", "predicted test", "observed train", "unobserved test"))) %>%
mutate(ahead = as.numeric(ahead)) %>%
mutate(time = time_stamp + ahead) %>%
filter(geo_value %in% geo_values) %>%
filter(type %in% c("observed train", "predicted test")) %>%
filter(time_stamp <= as.Date("2021-10-02")) %>%
mutate(geo_value = paste0("Pierce County"))
plt <- ggplot(Y, aes(time, cases, color = type, size = type, alpha = type, group = interaction(time_stamp, type)))+
geom_line()+
geom_point()+
facet_grid(~geo_value)+
theme_light()+
theme(legend.position="top")+
theme(legend.title = element_blank())+
scale_size_manual(values=c( "predicted test" = 0.5, "observed train" = 0.5))+
scale_color_manual(values=c("predicted test" = "tomato1", "observed train" = "dodgerblue1"))+
scale_alpha_manual(values=c("predicted test" = 1, "observed train" = 1))
ggsave(pltname, height = 4, width = length(geo_values) * 3)
return(Y)
}
Ys[[q]] = plot_fit_merged(train, test, model, top_geo[126], paste0("Plots/", scenario, "/Fits/fit.pdf"))
plot_fit_merged = function(train, test, model, geo_values, pltname){
Yhat_train <- train$X %*% model$B
colnames(Yhat_train) <- colnames(train$Y)
Yhat_test <- test$X %*% model$B
colnames(Yhat_test) <- colnames(test$Y)
Y <- rbind(data.frame(reshape_y(train$Y, train$info), "type" = "observed train"),
data.frame(reshape_y(Yhat_train, train$info), "type" = "predicted train"),
data.frame(reshape_y(test$Y, test$info), "type" = "unobserved test"),
data.frame(reshape_y(Yhat_test, test$info), "type" = "predicted test")) %>%
mutate(type = factor(type, levels = c("predicted train", "predicted test", "observed train", "unobserved test"))) %>%
mutate(ahead = as.numeric(ahead)) %>%
mutate(time = time_stamp + ahead) %>%
filter(geo_value %in% geo_values) %>%
filter(type %in% c("observed train", "predicted test")) %>%
filter(time_stamp <= as.Date("2021-10-02")) %>%
mutate(geo_value = paste0("Pierce County"))
ggplot(Y, aes(time, cases, color = type, size = type, alpha = type, group = interaction(time_stamp, type)))+
geom_line()+
geom_point()+
facet_grid(~geo_value)+
theme_light()+
theme(legend.position="top")+
theme(legend.title = element_blank())+
scale_size_manual(values=c( "predicted test" = 0.5, "observed train" = 0.5))+
scale_color_manual(values=c("predicted test" = "tomato1", "observed train" = "dodgerblue1"))+
scale_alpha_manual(values=c("predicted test" = 1, "observed train" = 1))
ggsave(pltname, height = 4, width = length(geo_values) * 3)
return(Y)
}
Ys[[q]] = plot_fit_merged(train, test, model, top_geo[126], paste0("Plots/", scenario, "/Fits/fit.pdf"))
plot_fit_merged = function(train, test, model, geo_values, pltname){
Yhat_train <- train$X %*% model$B
colnames(Yhat_train) <- colnames(train$Y)
Yhat_test <- test$X %*% model$B
colnames(Yhat_test) <- colnames(test$Y)
Y <- rbind(data.frame(reshape_y(train$Y, train$info), "type" = "observed train"),
data.frame(reshape_y(Yhat_train, train$info), "type" = "predicted train"),
data.frame(reshape_y(test$Y, test$info), "type" = "unobserved test"),
data.frame(reshape_y(Yhat_test, test$info), "type" = "predicted test")) %>%
mutate(type = factor(type, levels = c("predicted train", "predicted test", "observed train", "unobserved test"))) %>%
mutate(ahead = as.numeric(ahead)) %>%
mutate(time = time_stamp + ahead) %>%
filter(geo_value %in% geo_values) %>%
filter(type %in% c("observed train", "predicted test")) %>%
filter(time_stamp <= as.Date("2021-10-02")) %>%
mutate(geo_value = paste0("Pierce County"))
ggplot(Y, aes(time, cases, color = type, size = type, alpha = type, group = interaction(time_stamp, type)))+
geom_line()+
geom_point()+
facet_grid(~geo_value)+
theme_light()+
theme(legend.position="top")+
theme(legend.title = element_blank())+
scale_size_manual(values=c( "predicted test" = 0.5, "observed train" = 0.5))+
scale_color_manual(values=c("predicted test" = "tomato1", "observed train" = "dodgerblue1"))+
scale_alpha_manual(values=c("predicted test" = 1, "observed train" = 1))
ggsave(pltname, height = 4, width = length(geo_values) * 4)
return(Y)
}
plot_fit_merged = function(train, test, model, geo_values, pltname){
Yhat_train <- train$X %*% model$B
colnames(Yhat_train) <- colnames(train$Y)
Yhat_test <- test$X %*% model$B
colnames(Yhat_test) <- colnames(test$Y)
Y <- rbind(data.frame(reshape_y(train$Y, train$info), "type" = "observed train"),
data.frame(reshape_y(Yhat_train, train$info), "type" = "predicted train"),
data.frame(reshape_y(test$Y, test$info), "type" = "unobserved test"),
data.frame(reshape_y(Yhat_test, test$info), "type" = "predicted test")) %>%
mutate(type = factor(type, levels = c("predicted train", "predicted test", "observed train", "unobserved test"))) %>%
mutate(ahead = as.numeric(ahead)) %>%
mutate(time = time_stamp + ahead) %>%
filter(geo_value %in% geo_values) %>%
filter(type %in% c("observed train", "predicted test")) %>%
filter(time_stamp <= as.Date("2021-10-02")) %>%
mutate(geo_value = paste0("Pierce County"))
ggplot(Y, aes(time, cases, color = type, size = type, alpha = type, group = interaction(time_stamp, type)))+
geom_line()+
geom_point()+
facet_grid(~geo_value)+
theme_light()+
theme(legend.position="top")+
theme(legend.title = element_blank())+
scale_size_manual(values=c( "predicted test" = 0.3, "observed train" = 0.3))+
scale_color_manual(values=c("predicted test" = "tomato1", "observed train" = "dodgerblue1"))+
scale_alpha_manual(values=c("predicted test" = 1, "observed train" = 1))
ggsave(pltname, height = 4, width = length(geo_values) * 5)
return(Y)
}
Ys[[q]] = plot_fit_merged(train, test, model, top_geo[126], paste0("Plots/", scenario, "/Fits/fit.pdf"))
Ys[[q]] = plot_fit_merged(train, test, model, top_geo[126], paste0("Plots/", scenario, "/Fits/fit.pdf"))
plot_fit_merged = function(train, test, model, geo_values, pltname){
Yhat_train <- train$X %*% model$B
colnames(Yhat_train) <- colnames(train$Y)
Yhat_test <- test$X %*% model$B
colnames(Yhat_test) <- colnames(test$Y)
Y <- rbind(data.frame(reshape_y(train$Y, train$info), "type" = "observed train"),
data.frame(reshape_y(Yhat_train, train$info), "type" = "predicted train"),
data.frame(reshape_y(test$Y, test$info), "type" = "unobserved test"),
data.frame(reshape_y(Yhat_test, test$info), "type" = "predicted test")) %>%
mutate(type = factor(type, levels = c("predicted train", "predicted test", "observed train", "unobserved test"))) %>%
mutate(ahead = as.numeric(ahead)) %>%
mutate(time = time_stamp + ahead) %>%
filter(geo_value %in% geo_values) %>%
filter(type %in% c("observed train", "predicted test")) %>%
filter(time_stamp <= as.Date("2021-10-02")) %>%
mutate(geo_value = paste0("Pierce County"))
ggplot(Y, aes(time, cases, color = type, size = type, alpha = type, group = interaction(time_stamp, type)))+
geom_line()+
geom_point()+
facet_grid(~geo_value)+
theme_light()+
theme(legend.position="top")+
theme(legend.title = element_blank())+
scale_size_manual(values=c( "predicted test" = 0.3, "observed train" = 0.3))+
scale_color_manual(values=c("predicted test" = "tomato1", "observed train" = "dodgerblue1"))+
scale_alpha_manual(values=c("predicted test" = 1, "observed train" = 1))
ggsave(pltname, height = 3, width = length(geo_values) * 5)
return(Y)
}
Ys[[q]] = plot_fit_merged(train, test, model, top_geo[126], paste0("Plots/", scenario, "/Fits/fit.pdf"))
